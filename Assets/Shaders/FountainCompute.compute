// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel DensityTransfer

struct Particle {
	float3 pos;
	float  _pad1;
	float3 vel;
	float  _pad2;
};

RWStructuredBuffer<Particle> Particles;

RWTexture3D<float4> Density;

float4x4 Object2World;
uint Resolution;
float Time;
float dT;

[numthreads(8,8,8)]
void DensityTransfer (uint3 id : SV_DispatchThreadID)
{
    uint particleCount, stride;
	Particles.GetDimensions(particleCount, stride);

	float3 cellPos = float3(id.x, id.y, id.z)/float(Resolution) - float3(0.5, 0.5, 0.5);

	cellPos = mul(Object2World, float4(cellPos, 1)).xyz;
	float cellSize = length(mul(Object2World, float4(1.0/Resolution, 0, 0, 0)));

	float density = 0;
	for(int i = 0; i < particleCount; i++) {
		Particle particle = Particles.Load(i);
		float dist = length(cellPos - particle.pos);
		if(dist < 0.04) {
			density += 1.0f;
		}
	}

	Density[id.xyz] = float4(0, 0.5, 1.0, density != 0.0 ? 1 : 0 );
}


